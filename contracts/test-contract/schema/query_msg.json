{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "desmos_chain"
      ],
      "properties": {
        "desmos_chain": {
          "type": "object",
          "required": [
            "request"
          ],
          "properties": {
            "request": {
              "$ref": "#/definitions/QueryRequest_for_DesmosQuery"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Addr": {
      "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
      "type": "string"
    },
    "BankQuery": {
      "oneOf": [
        {
          "description": "This calls into the native bank module for one denomination Return value is BalanceResponse",
          "type": "object",
          "required": [
            "balance"
          ],
          "properties": {
            "balance": {
              "type": "object",
              "required": [
                "address",
                "denom"
              ],
              "properties": {
                "address": {
                  "type": "string"
                },
                "denom": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "This calls into the native bank module for all denominations. Note that this may be much more expensive than Balance and should be avoided if possible. Return value is AllBalanceResponse.",
          "type": "object",
          "required": [
            "all_balances"
          ],
          "properties": {
            "all_balances": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "DesmosQuery": {
      "description": "Enum that defines how the desmos query messages are serialized.",
      "oneOf": [
        {
          "description": "Queries relative to the x/profiles module.",
          "type": "object",
          "required": [
            "profiles"
          ],
          "properties": {
            "profiles": {
              "$ref": "#/definitions/ProfilesQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries relative to the x/subspaces module.",
          "type": "object",
          "required": [
            "subspaces"
          ],
          "properties": {
            "subspaces": {
              "$ref": "#/definitions/SubspacesQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries relative to the x/relationships module.",
          "type": "object",
          "required": [
            "relationships"
          ],
          "properties": {
            "relationships": {
              "$ref": "#/definitions/RelationshipsQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries relative to the x/posts module.",
          "type": "object",
          "required": [
            "posts"
          ],
          "properties": {
            "posts": {
              "$ref": "#/definitions/PostsQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries relative to the x/reactions module.",
          "type": "object",
          "required": [
            "reactions"
          ],
          "properties": {
            "reactions": {
              "$ref": "#/definitions/ReactionsQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries relative to the x/reports module.",
          "type": "object",
          "required": [
            "reports"
          ],
          "properties": {
            "reports": {
              "$ref": "#/definitions/ReportsQuery"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "PageRequest": {
      "description": "Represents the configurations that tell the application which page of data to fetch.",
      "type": "object",
      "required": [
        "count_total",
        "limit",
        "reverse"
      ],
      "properties": {
        "count_total": {
          "description": "Set to true to indicate that the result set should include a count of the total number of items available for pagination. `count_total` is only respected when offset is used. It is ignored when key is set.",
          "type": "boolean"
        },
        "key": {
          "description": "Value returned in PageResponse.next_key to begin querying the next page most efficiently. Only one of offset or key should be set.",
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "limit": {
          "description": "The total number of results to be returned in the result page.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "offset": {
          "description": "A numeric offset that can be used when key is unavailable. It is less efficient than using key. Only one of offset or key should be set.",
          "anyOf": [
            {
              "$ref": "#/definitions/Uint64"
            },
            {
              "type": "null"
            }
          ]
        },
        "reverse": {
          "description": "Set to true if results are to be returned in the descending order.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "PostsQuery": {
      "description": "Query messages that can be sent to the x/relationships module.",
      "oneOf": [
        {
          "description": "Queries all the posts inside a given subspace.",
          "type": "object",
          "required": [
            "subspace_posts"
          ],
          "properties": {
            "subspace_posts": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the posts for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries all the posts inside a given section.",
          "type": "object",
          "required": [
            "section_posts"
          ],
          "properties": {
            "section_posts": {
              "type": "object",
              "required": [
                "section_id",
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "section_id": {
                  "description": "Id of the section to query the posts for.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the posts for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries for a single post inside a given subspace.",
          "type": "object",
          "required": [
            "post"
          ],
          "properties": {
            "post": {
              "type": "object",
              "required": [
                "post_id",
                "subspace_id"
              ],
              "properties": {
                "post_id": {
                  "description": "Id of the post to query for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace where the post is stored.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries the attachments of the post having the given id.",
          "type": "object",
          "required": [
            "post_attachments"
          ],
          "properties": {
            "post_attachments": {
              "type": "object",
              "required": [
                "post_id",
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "post_id": {
                  "description": "Id of the post to query the attachments for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace where the post is stored.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Queries the answers for the poll having the given id.",
          "type": "object",
          "required": [
            "poll_answers"
          ],
          "properties": {
            "poll_answers": {
              "type": "object",
              "required": [
                "poll_id",
                "post_id",
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "poll_id": {
                  "description": "Id of the poll to query the answers for.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "post_id": {
                  "description": "Id of the post that holds the poll.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace where the post is stored.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "user": {
                  "description": "Address of the user to query the responses for.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ProfilesQuery": {
      "description": "Query messages that can be sent to the x/profiles module.",
      "oneOf": [
        {
          "description": "Message to query a user profile.",
          "type": "object",
          "required": [
            "profile"
          ],
          "properties": {
            "profile": {
              "type": "object",
              "required": [
                "user"
              ],
              "properties": {
                "user": {
                  "description": "Address or DTag of the user to query the profile for.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the dtag transfer requests.",
          "type": "object",
          "required": [
            "incoming_dtag_transfer_requests"
          ],
          "properties": {
            "incoming_dtag_transfer_requests": {
              "type": "object",
              "required": [
                "receiver"
              ],
              "properties": {
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "receiver": {
                  "description": "The address of the user to which query the incoming requests for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the chain links.",
          "type": "object",
          "required": [
            "chain_links"
          ],
          "properties": {
            "chain_links": {
              "type": "object",
              "properties": {
                "chain_name": {
                  "description": "name of the chain to which search the link for. Used only if `user` not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "target": {
                  "description": "the external address to which query the link for. Used only if `chain_name` is not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "user": {
                  "description": "Optional address of the user to which search the link for.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the owners of chain links.",
          "type": "object",
          "required": [
            "chain_link_owners"
          ],
          "properties": {
            "chain_link_owners": {
              "type": "object",
              "properties": {
                "chain_name": {
                  "description": "(Optional) Chain name to search link owners of.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "target": {
                  "description": "(Optional) External address to search for. Used only if `chain_name` is not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the default external addresses.",
          "type": "object",
          "required": [
            "default_external_addresses"
          ],
          "properties": {
            "default_external_addresses": {
              "type": "object",
              "properties": {
                "chain_name": {
                  "description": "(Optional) Chain name to query the default addresses for.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "owner": {
                  "description": "(Optional) Owner for which to query the default addresses.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the application links.",
          "type": "object",
          "required": [
            "application_links"
          ],
          "properties": {
            "application_links": {
              "type": "object",
              "properties": {
                "application": {
                  "description": "Application name associated with the link. Used only if `user` not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "user": {
                  "description": "Address associated for which the link should be searched. If `None` queries all the performed application links.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "username": {
                  "description": "Username inside the application associated with the link. Used only if `application` not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the app link through the client id that has performed the call to the oracle.",
          "type": "object",
          "required": [
            "application_link_by_client_i_d"
          ],
          "properties": {
            "application_link_by_client_i_d": {
              "type": "object",
              "required": [
                "client_id"
              ],
              "properties": {
                "client_id": {
                  "description": "Id of the client to which search the link for.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to queries the owners of application links.",
          "type": "object",
          "required": [
            "application_link_owners"
          ],
          "properties": {
            "application_link_owners": {
              "type": "object",
              "properties": {
                "application": {
                  "description": "(Optional) Application name to search link owners of.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "username": {
                  "description": "(Optional) Username to search for. Used only if `application` not `None`.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "QueryRequest_for_DesmosQuery": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "bank"
          ],
          "properties": {
            "bank": {
              "$ref": "#/definitions/BankQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "custom"
          ],
          "properties": {
            "custom": {
              "$ref": "#/definitions/DesmosQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "staking"
          ],
          "properties": {
            "staking": {
              "$ref": "#/definitions/StakingQuery"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "wasm"
          ],
          "properties": {
            "wasm": {
              "$ref": "#/definitions/WasmQuery"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "RawReportTarget": {
      "description": "Serializable representation of [`ReportTarget`]. To create an instance of this struct use the `into()` method of [`ReportTarget`]",
      "type": "object",
      "required": [
        "@type"
      ],
      "properties": {
        "@type": {
          "type": "string"
        },
        "post_id": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint64"
            },
            {
              "type": "null"
            }
          ]
        },
        "user": {
          "anyOf": [
            {
              "$ref": "#/definitions/Addr"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ReactionsQuery": {
      "description": "Query messages that can be sent to the x/reactions module.",
      "oneOf": [
        {
          "description": "Message to query the reactions associated to the post.",
          "type": "object",
          "required": [
            "reactions"
          ],
          "properties": {
            "reactions": {
              "type": "object",
              "required": [
                "post_id",
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "post_id": {
                  "description": "Id of the post to query the reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace that contains the post to query the reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "user": {
                  "description": "Address of the user to query the reactions for.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the reaction with the given id.",
          "type": "object",
          "required": [
            "reaction"
          ],
          "properties": {
            "reaction": {
              "type": "object",
              "required": [
                "post_id",
                "reaction_id",
                "subspace_id"
              ],
              "properties": {
                "post_id": {
                  "description": "Post id to query the reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "reaction_id": {
                  "description": "Id of the reaction to query.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Id of the subspace that contains the post to query the reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the regiestered reactions inside the subspace.",
          "type": "object",
          "required": [
            "registered_reactions"
          ],
          "properties": {
            "registered_reactions": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Optional pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the registered reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the registered reactions.",
          "type": "object",
          "required": [
            "registered_reaction"
          ],
          "properties": {
            "registered_reaction": {
              "type": "object",
              "required": [
                "reaction_id",
                "subspace_id"
              ],
              "properties": {
                "reaction_id": {
                  "description": "Id of the registered reaction to query for.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the registered reactions for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the reactions parameters inside the subspace.",
          "type": "object",
          "required": [
            "reactions_params"
          ],
          "properties": {
            "reactions_params": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "subspace_id": {
                  "description": "Id of the subspace for which to query the params.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "RelationshipsQuery": {
      "description": "Query messages that can be sent to the x/relationships module.",
      "oneOf": [
        {
          "description": "Message to query the relationships inside a subspaces.",
          "type": "object",
          "required": [
            "relationships"
          ],
          "properties": {
            "relationships": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "counterparty": {
                  "description": "Optional address of the counterparty of the relationships (used only if the `user` is provided).",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Subspace to query the relationships for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "user": {
                  "description": "Optional address of the user for which to query the relationships.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the blocks created inside a subspace.",
          "type": "object",
          "required": [
            "blocks"
          ],
          "properties": {
            "blocks": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "blocked": {
                  "description": "Optional address of the blocked user to query the block for (used only if the `blocker` is provided).",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "blocker": {
                  "description": "Optional address of the blocker to query the blocks for.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Subspace to query the blocks for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ReportsQuery": {
      "description": "Query messages that can be sent to the x/reports module.",
      "oneOf": [
        {
          "description": "Query the reports for a specific target.",
          "type": "object",
          "required": [
            "reports"
          ],
          "properties": {
            "reports": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "reporter": {
                  "description": "User that reported the target. This is going to be used only if the `target` field is not `None`.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the reports for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "target": {
                  "description": "Target to query the reports for.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/RawReportTarget"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Query the report having the given id.",
          "type": "object",
          "required": [
            "report"
          ],
          "properties": {
            "report": {
              "type": "object",
              "required": [
                "report_id",
                "subspace_id"
              ],
              "properties": {
                "report_id": {
                  "description": "Id of the report to query for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace that holds the report to query for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Query the supported reporting reasons for a subspace.",
          "type": "object",
          "required": [
            "reasons"
          ],
          "properties": {
            "reasons": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the supported reporting reasons for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Query the reason having the given id.",
          "type": "object",
          "required": [
            "reason"
          ],
          "properties": {
            "reason": {
              "type": "object",
              "required": [
                "reason_id",
                "subspace_id"
              ],
              "properties": {
                "reason_id": {
                  "description": "Id of the reason to query for.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Id of the subspace that holds the reason to query for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "StakingQuery": {
      "oneOf": [
        {
          "description": "Returns the denomination that can be bonded (if there are multiple native tokens on the chain)",
          "type": "object",
          "required": [
            "bonded_denom"
          ],
          "properties": {
            "bonded_denom": {
              "type": "object"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "AllDelegations will return all delegations by the delegator",
          "type": "object",
          "required": [
            "all_delegations"
          ],
          "properties": {
            "all_delegations": {
              "type": "object",
              "required": [
                "delegator"
              ],
              "properties": {
                "delegator": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Delegation will return more detailed info on a particular delegation, defined by delegator/validator pair",
          "type": "object",
          "required": [
            "delegation"
          ],
          "properties": {
            "delegation": {
              "type": "object",
              "required": [
                "delegator",
                "validator"
              ],
              "properties": {
                "delegator": {
                  "type": "string"
                },
                "validator": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns all validators in the currently active validator set.\n\nThe query response type is `AllValidatorsResponse`.",
          "type": "object",
          "required": [
            "all_validators"
          ],
          "properties": {
            "all_validators": {
              "type": "object"
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns the validator at the given address. Returns None if the validator is not part of the currently active validator set.\n\nThe query response type is `ValidatorResponse`.",
          "type": "object",
          "required": [
            "validator"
          ],
          "properties": {
            "validator": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "description": "The validator's address (e.g. (e.g. cosmosvaloper1...))",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "SubspacesQuery": {
      "description": "Query messages that can be sent to the x/subspaces module.",
      "oneOf": [
        {
          "description": "Message to query the created subspaces subspaces. Response: [QuerySubspacesResponse](crate::subspaces::models_query::QuerySubspacesResponse).",
          "type": "object",
          "required": [
            "subspaces"
          ],
          "properties": {
            "subspaces": {
              "type": "object",
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the details of a subspaces. Response: [QuerySubspaceResponse](crate::subspaces::models_query::QuerySubspaceResponse).",
          "type": "object",
          "required": [
            "subspace"
          ],
          "properties": {
            "subspace": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "subspace_id": {
                  "description": "Subspace id.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the created section inside a subspace. Response: [QuerySectionsResponse](crate::subspaces::models_query::QuerySectionsResponse).",
          "type": "object",
          "required": [
            "sections"
          ],
          "properties": {
            "sections": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the sections for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the details of a section. Response: [QuerySectionResponse](crate::subspaces::models_query::QuerySectionResponse).",
          "type": "object",
          "required": [
            "section"
          ],
          "properties": {
            "section": {
              "type": "object",
              "required": [
                "section_id",
                "subspace_id"
              ],
              "properties": {
                "section_id": {
                  "description": "Id of the searched section.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Id of the subspace to query the sections for.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the groups created inside a subspace. Response: [QueryUserGroupsResponse](crate::subspaces::models_query::QueryUserGroupsResponse).",
          "type": "object",
          "required": [
            "user_groups"
          ],
          "properties": {
            "user_groups": {
              "type": "object",
              "required": [
                "subspace_id"
              ],
              "properties": {
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "section_id": {
                  "description": "Section id to query the groups for.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Subspace id to which the groups belongs.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the details of a group. Response: [QueryUserGroupResponse](crate::subspaces::models_query::QueryUserGroupResponse).",
          "type": "object",
          "required": [
            "user_group"
          ],
          "properties": {
            "user_group": {
              "type": "object",
              "required": [
                "group_id",
                "subspace_id"
              ],
              "properties": {
                "group_id": {
                  "description": "Id of the group.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Subspace id to which the group belongs.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the member of a group. Response: [QueryUserGroupMembersResponse](crate::subspaces::models_query::QueryUserGroupMembersResponse).",
          "type": "object",
          "required": [
            "user_group_members"
          ],
          "properties": {
            "user_group_members": {
              "type": "object",
              "required": [
                "group_id",
                "subspace_id"
              ],
              "properties": {
                "group_id": {
                  "description": "Id of the group.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "pagination": {
                  "description": "Pagination configs.",
                  "anyOf": [
                    {
                      "$ref": "#/definitions/PageRequest"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "subspace_id": {
                  "description": "Subspace id to which the group belongs.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Message to query the permission that an user have inside a subspace. Response: [QueryUserPermissionsResponse](crate::subspaces::models_query::QueryUserPermissionsResponse).",
          "type": "object",
          "required": [
            "user_permissions"
          ],
          "properties": {
            "user_permissions": {
              "type": "object",
              "required": [
                "subspace_id",
                "user"
              ],
              "properties": {
                "section_id": {
                  "description": "Section id to which the permissions belongs.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                },
                "subspace_id": {
                  "description": "Subspace id to which the permissions belongs.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Uint64"
                    }
                  ]
                },
                "user": {
                  "description": "User address.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Addr"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "WasmQuery": {
      "oneOf": [
        {
          "description": "this queries the public API of another contract at a known address (with known ABI) Return value is whatever the contract returns (caller should know), wrapped in a ContractResult that is JSON encoded.",
          "type": "object",
          "required": [
            "smart"
          ],
          "properties": {
            "smart": {
              "type": "object",
              "required": [
                "contract_addr",
                "msg"
              ],
              "properties": {
                "contract_addr": {
                  "type": "string"
                },
                "msg": {
                  "description": "msg is the json-encoded QueryMsg struct",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Binary"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "this queries the raw kv-store of the contract. returns the raw, unparsed data stored at that key, which may be an empty vector if not present",
          "type": "object",
          "required": [
            "raw"
          ],
          "properties": {
            "raw": {
              "type": "object",
              "required": [
                "contract_addr",
                "key"
              ],
              "properties": {
                "contract_addr": {
                  "type": "string"
                },
                "key": {
                  "description": "Key is the raw key used in the contracts Storage",
                  "allOf": [
                    {
                      "$ref": "#/definitions/Binary"
                    }
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "returns a ContractInfoResponse with metadata on the contract from the runtime",
          "type": "object",
          "required": [
            "contract_info"
          ],
          "properties": {
            "contract_info": {
              "type": "object",
              "required": [
                "contract_addr"
              ],
              "properties": {
                "contract_addr": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}
